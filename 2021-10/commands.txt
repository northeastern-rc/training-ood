# Exercise 1

# 1.1 SRUN - to request a compute node
# During training
$ srun --nodes=1 --ntasks=10 --cpus-per-task=2 \
--mem=1G --time=01:00:00 --partition=reservation \
–-reservation=Oct2021cpu --pty --export=ALL /bin/bash 

# Outside training
$ srun --nodes=1 --ntasks=10 --cpus-per-task=2 --mem=1G --time=01:00:00 --partition=express --pty --export=ALL /bin/bash


# 1.2 Sample Script
$ module load python/3.7.1
$ python sample_script.py

# 1.3 Exit
$ scancel <job_id>


See if you are associated with multiple slurm accounts
$ sacctmgr show associations where user=username

Choose the correct Slurm account to submit your job$ srun --account=accountname --partition=short --nodes=1 --ntasks=28 --pty --mem=16G /bin/bash



# Exercise 2

# 2.1 Create the script file
$ vi sample.bash

### press i to enter insert mode and then type the following into the file. After completing typing, press ESC to exit insert mode. Then type :wq to save and exit the file

# 2.2 Contents of the script
#!/bin/bash

#SBATCH --partition=reservation
#SBATCH --reservation=Oct2021cpu
#SBATCH --job-name=test
#SBATCH --time=00:05:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --output=%j.output
#SBATCH --error=%j.error


echo "HELLO WORLD!"

# 2.3 Run the script
$ sbatch sample.bash

# 2.4 Monitor jobs

$ squeue –u <username>	
$ scontrol show jobid -d <job_id>
$ seff <job_id>


# Exercise 3

#!/bin/bash
#SBATCH --partition=reservation
#SBATCH --reservation=Oct2021cpu 
#SBATCH --job-name=test_array
#SBATCH --time=00:05:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --output=%A_%a.output
#SBATCH --error=%A_%a.error
#SBATCH --array=1-4%4 #run a 4-job array, 4 jobs will launched at the same time.

# Use a regular partition, such as express, when not in a training
# session
##SBATCH --partition=express

echo "Job array ID: $SLURM_ARRAY_JOB_ID , sub-job $SLURM_ARRAY_TASK_ID is running!"

cd d$SLURM_ARRAY_TASK_ID
cat a.txt
